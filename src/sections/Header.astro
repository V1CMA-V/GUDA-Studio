---
import ButtonRegister from '@/components/ButtonRegister.astro'

const { pathname } = Astro.url

// Resaltar la clase activa en el menú de navegación
const isActive = (path: string) => pathname === path
---

<header
  class="fixed top-0 z-50 mx-auto flex items-center h-24 w-full select-none md:px-24 text-white sm:overflow-hidden"
>
  <div class="relative flex justify-between w-full items-center px-6 py-4">
    <div class="w-44 h-auto flex flex-col items-center justify-center">
      <a href="/" class="flex items-center gap-2 group logo-hover">
        <img
          src="/logo-white.webp"
          alt="Logo Guda Studio"
          class="transition-transform duration-300 group-hover:scale-110 group-hover:rotate-6 drop-shadow-lg"
        />
      </a>
    </div>

    <!-- Menú desktop -->
    <nav class="hidden md:flex items-center justify-between">
      <ul
        class="flex gap-8 text-lg font-light tracking-widest items-center justify-between uppercase"
        id="navContent"
      >
        <li>
          <a
            href="/"
            class=`${isActive('/') ? 'glow-text font-semibold text-2xl' : 'text-white hover:glow-text'}`
            >Inicio</a
          >
        </li>
        <li>
          <a
            href="/about"
            class=`${isActive('/about') ? 'glow-text font-semibold text-2xl' : 'text-white hover:glow-text'}`
            >Sobre Nosotros</a
          >
        </li>
        <li>
          <a
            href="/classes"
            class=`${isActive('/classes') ? 'glow-text font-semibold text-2xl' : 'text-white hover:glow-text'}`
            >Clases</a
          >
        </li>
        <li>
          <a
            href="/shop"
            class=`${isActive('/shop') ? 'glow-text font-semibold text-2xl' : 'text-white hover:glow-text'}`
            >Tienda</a
          >
        </li>
      </ul>
    </nav>

    <div class="flex items-center gap-4">
      <!-- Botón Inscríbete -->
      <div class="hidden md:block">
        <ButtonRegister />
      </div>
      <!-- Botón hamburguesa solo en mobile -->
      <button
        id="mobileMenuBtn"
        class="md:hidden flex flex-col gap-1.5 p-2 rounded focus:outline-none group z-[10000] relative"
        aria-label="Abrir menú"
        aria-expanded="false"
      >
        <span
          class="block w-7 h-1 rounded bg-primary transition-all group-hover:bg-text"
        ></span>
        <span
          class="block w-7 h-1 rounded bg-primary transition-all group-hover:bg-text"
        ></span>
        <span
          class="block w-7 h-1 rounded bg-primary transition-all group-hover:bg-text"
        ></span>
      </button>
    </div>
  </div>
</header>

<!-- Overlay y menú móvil -->
<nav
  id="mobileOverlay"
  class="fixed inset-0 backdrop-blur-md bg-black/70 z-[9999] h-screen w-full translate-x-full transition-transform duration-300 ease-in-out md:hidden"
>
  <!-- Exit button -->
  <button
    id="mobileMenuClose"
    class="absolute top-5 right-6 text-6xl font-bold text-primary hover:text-white transition-colors duration-200"
    >&times;</button
  >

  <!-- Navigation -->
  <ul
    id="mobileMenu"
    class="flex flex-col items-start px-12 gap-12 justify-center h-full text-white tracking-widest"
  >
    <li>
      <a
        href="/"
        class=`${isActive('/') ? 'glow-text font-bold' : 'text-white hover:glow-text font-medium'} text-6xl animate-line`
        >Inicio</a
      >
    </li>
    <li>
      <a
        href="/about"
        class=`${isActive('/about') ? 'glow-text font-bold' : 'text-white hover:glow-text font-medium'} text-6xl animate-line`
        >Sobre Nosotros</a
      >
    </li>
    <li>
      <a
        href="/classes"
        class=`${isActive('/classes') ? 'glow-text font-bold' : 'text-white hover:glow-text font-medium'} text-6xl animate-line`
        >Clases</a
      >
    </li>
    <li>
      <a
        href="/shop"
        class=`${isActive('/shop') ? 'glow-text font-bold' : 'text-white hover:glow-text font-medium'} text-6xl animate-line`
        >Tienda</a
      >
    </li>

    <ButtonRegister isBig />
  </ul>
</nav>

<style>
  header {
    background: transparent;
    animation: header-blur-scroll 0.3s linear both;
    animation-timeline: scroll();
    animation-range: 0 250px;
    border-bottom: 1px solid transparent;
  }

  .logo-hover img {
    transition:
      transform 0.3s cubic-bezier(0.4, 2, 0.4, 1),
      filter 0.2s;
  }
  .logo-hover:hover img {
    filter: drop-shadow(0 2px 12px #4079ff90);
    transform: scale(1.13) rotate(-6deg);
  }

  @keyframes header-blur-scroll {
    0% {
      backdrop-filter: blur(0px);
      background: transparent;
    }

    100% {
      backdrop-filter: blur(10px);
      background: rgba(0, 0, 0, 0.5);
      padding-bottom: var(--spacing-6);
      border-bottom-color: black;
    }
  }

  #navContent {
    transition:
      translate 0.3s ease-in-out,
      visibility 0.3s 0.3s;
  }

  #navContent.showing {
    visibility: visible;
    translate: 0 0;
    transition:
      translate 0.3s ease-in-out,
      visibility 0.3s;
  }

  /* Mobile menu animations */
  #mobileOverlay.open {
    transform: translateX(0);
  }

  /* Hamburger button animation */
  #mobileMenuBtn {
    transition: all 0.3s ease;
  }

  #mobileMenuBtn span {
    transition: all 0.3s ease;
  }

  #mobileMenuBtn.open span:nth-child(1) {
    transform: rotate(45deg) translate(6px, 6px);
  }

  #mobileMenuBtn.open span:nth-child(2) {
    opacity: 0;
  }

  #mobileMenuBtn.open span:nth-child(3) {
    transform: rotate(-45deg) translate(6px, -6px);
  }

  /* Mobile menu items animation */
  #mobileMenu li {
    transform: translateX(-50px);
    opacity: 0;
    transition: all 0.3s ease;
  }

  #mobileOverlay.open #mobileMenu li {
    transform: translateX(0);
    opacity: 1;
  }

  #mobileOverlay.open #mobileMenu li:nth-child(1) {
    transition-delay: 0.1s;
  }

  #mobileOverlay.open #mobileMenu li:nth-child(2) {
    transition-delay: 0.2s;
  }

  #mobileOverlay.open #mobileMenu li:nth-child(3) {
    transition-delay: 0.3s;
  }

  #mobileOverlay.open #mobileMenu li:nth-child(4) {
    transition-delay: 0.4s;
  }

  #mobileOverlay.open #mobileMenu li:nth-child(5) {
    transition-delay: 0.5s;
  }
</style>

<script>
  function initMobileMenu() {
    const mobileMenuBtn = document.getElementById('mobileMenuBtn')
    const mobileOverlay = document.getElementById('mobileOverlay')
    const mobileMenuClose = document.getElementById('mobileMenuClose')
    const body = document.body

    // Verificar que los elementos existen
    if (!mobileMenuBtn || !mobileOverlay || !mobileMenuClose) {
      console.warn('Elementos del menú móvil no encontrados')
      return
    }

    // Función para abrir el menú móvil
    function openMobileMenu() {
      if (mobileOverlay && mobileMenuBtn) {
        mobileOverlay.classList.add('open')
        mobileMenuBtn.classList.add('open')
        body.style.overflow = 'hidden'
        body.style.position = 'fixed'
        body.style.width = '100%'
        mobileMenuBtn.setAttribute('aria-expanded', 'true')
        mobileMenuBtn.setAttribute('aria-label', 'Cerrar menú')
      }
    }

    // Función para cerrar el menú móvil
    function closeMobileMenu() {
      if (mobileOverlay && mobileMenuBtn) {
        mobileOverlay.classList.remove('open')
        mobileMenuBtn.classList.remove('open')
        body.style.overflow = ''
        body.style.position = ''
        body.style.width = ''
        mobileMenuBtn.setAttribute('aria-expanded', 'false')
        mobileMenuBtn.setAttribute('aria-label', 'Abrir menú')
      }
    }

    // Event listeners
    mobileMenuBtn.addEventListener('click', openMobileMenu)
    mobileMenuClose.addEventListener('click', closeMobileMenu)

    // Cerrar menú al hacer click en el overlay (fuera del contenido)
    mobileOverlay.addEventListener('click', function (e) {
      if (e.target === mobileOverlay) {
        closeMobileMenu()
      }
    })

    // Cerrar menú con la tecla Escape
    document.addEventListener('keydown', function (e) {
      if (e.key === 'Escape' && mobileOverlay.classList.contains('open')) {
        closeMobileMenu()
      }
    })

    // Cerrar menú al hacer click en cualquier enlace del menú móvil
    const mobileMenuLinks = document.querySelectorAll('#mobileMenu a')
    mobileMenuLinks.forEach((link) => {
      link.addEventListener('click', closeMobileMenu)
    })
  }

  // Inicializar cuando el DOM esté listo
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initMobileMenu)
  } else {
    initMobileMenu()
  }
</script>
